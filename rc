#!/bin/sh
# This file is executed on boot to initialize the system and can also be run by
# the user to start/stop daemons.

# Fallback Configuration Values, to be able to run even with a broken, deleted
# or outdated rccar.conf:
DAEMONS="NetworkManager acpid alsa avahi-daemon crond cupsd dbus dhcpcd haveged iptables lighttpd mpd ntpd polipo privoxy sshd syslog-ng vsftpd wpa_supplicant"
ENABLED="@syslog-ng @crond @dbus"
UDEV="busybox"
NETWORK_INTERFACE="eth0"
WIFI_INTERFACE="wlan0"
HOSTNAME="$(cat /etc/hostname)"
KEYMAP=us

# Read system config
. /etc/rccar.conf

on_boot() {
	echo_color 4 RC-Car 1.0 booting up $(cat /etc/issue | head -n +1 | awk '{print $1}') [$(uname -rms)]

	# mount the API filesystem
	echo_color 3 :: mounting API filesystem...
	mountpoint -q /proc	|| mount -t proc proc /proc -o nosuid,noexec,nodev
	mountpoint -q /sys	 || mount -t sysfs sys /sys -o nosuid,noexec,nodev
	mountpoint -q /run	 || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
	mountpoint -q /dev	 || mount -t devtmpfs dev /dev -o mode=0755,nosuid
	mkdir -p /dev/pts /dev/shm
	mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
	mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

	# initialize system
	echo_color 3 :: setting up loopback device...
	/usr/sbin/ip link set up dev lo

	echo_color 3 :: initializing udev...
	if [ "$UDEV" = systemd ]; then
		/usr/lib/systemd/systemd-udevd --daemon
		/usr/bin/udevadm trigger --action=add --type=subsystems
		/usr/bin/udevadm trigger --action=add --type=devices
	elif [ "$UDEV" = eudev ]; then
		/usr/bin/udevd --daemon
		/usr/bin/udevadm trigger --action=add --type=subsystems
		/usr/bin/udevadm trigger --action=add --type=devices
	else # use busybox mdev as fallback:
		busybox mdev -s
		echo /sbin/mdev > /proc/sys/kernel/hotplug
	fi

	echo_color 3 :: setting hostname...
	echo "$HOSTNAME" >| /proc/sys/kernel/hostname
        
	echo_color 3 :: setting keymap...
	loadkeys $KEYMAP

	echo_color 3 :: mounting...
	mount -o remount,rw /
	mount -a
	swapon -a

	echo_color 3 :: running fsck on partitions...
	fsck -A -T -C -a

	echo_color 3 :: starting daemons...
	for dmn in $ENABLED; do
		if [ "$(echo "$dmn" | awk '{ s=substr($0, 1, 1); print s; }')" = '@' ]; then
			default_start "$(echo "$dmn" | awk '{ s=substr($0, 2); print s; }')" &
		else
			default_start "$dmn"
		fi
	done
}

on_shutdown() {
	# stop the default daemons
	echo_color 3 :: stopping daemons...
	default_stop all

	# shut down udev
	echo_color 3 :: shutting down udev...
	if [ "$UDEV" = systemd ]; then
		killall systemd-udevd
	elif [ "$UDEV" = eudev ]; then
		killall udevd
	fi

	# TERM & KILL all programs
	echo_color 3 :: killing programs...
	trap "kill 0" SIGTERM
	sleep 3
	trap "kill 0" SIGKILL

	# umount the API filesystem
	echo_color 3 :: unmounting API filesystem...
	umount -r /run
	umount -a -r -t nosysfs,noproc,nodevtmpfs,notmpfs
	swapoff -a

	# mount root read-only
	echo_color 3 :: setting root partition read-only..
	mount -o remount,ro /

	busybox poweroff
}

on_reboot () {
	# stop the default daemons
	echo_color 3 :: stopping daemons...
	default_stop all

	# shut down udev
	echo_color 3 :: shutting down udev...
	if [ "$UDEV" = systemd ]; then
		killall systemd-udevd
	elif [ "$UDEV" = eudev ]; then
		killall udevd
	fi

	# TERM & KILL all programs
	echo_color 3 :: killing programs...
	trap "kill 0" SIGTERM
	sleep 3
	trap "kill 0" SIGKILL

	# umount the API filesystem
	echo_color 3 :: unmounting API filesystem...
	umount -r /run
	umount -a -r -t nosysfs,noproc,nodevtmpfs,notmpfs
	swapoff -a

	# mount root read-only
	echo_color 3 :: setting root partition read-only..
	mount -o remount,ro /

	busybox reboot
}

default_start() {
	echo_color 2 :: starting "$1"...
	case "$1" in
	all)
		for dmn in $DAEMONS $ENABLED; do
			default_poll "${dmn##@}" || default_start "${dmn##@}"
		done;;
	*)
		exec "/etc/rc-car/service/$1.tire" -start;;
	esac
}

default_stop() {
	echo_color 1 :: stopping "$1"...
	case "$1" in
	all)
		for dmn in $DAEMONS $ENABLED; do
			default_poll "${dmn##@}" && default_stop "${dmn##@}"
		done;;
	*)
		exec "/etc/rc-car/service/$1.tire" -stop;;
	esac
}

default_restart() {
	case "$1" in
	all)
		for dmn in $DAEMONS $ENABLED; do
			default_stop "${dmn##@}" && default_start "${dmn##@}"
		done;;
	*)
		exec "/etc/rc-car/service/$1.tire" -restart;;
	esac
}

default_poll() {
	case "$1" in
	all)
		pgrep "(^|/)$1\$" >/dev/null 2>&1;;
	*)
		exec "/etc/rc-car/service/$1.tire" -poll;;
	esac
}

echo_color() {
  color="$1"
  shift
  printf "\033[1;3%sm%s\033[00m\n" "$color" "$*"
}


#===================
# handle arguments
case "$1" in
init)
	on_boot;;
shutdown)
	on_shutdown;;
reboot)
	on_reboot;;
start|stop|restart)
	cmd="$1"
	shift
	for dmn in ${@:-$DAEMONS}; do
		default_"${cmd}" "$dmn"
	done;;
''|list)
	# list all daemons and their status
	for dmn in $DAEMONS; do
		if default_poll "$dmn" >/dev/null 2>&1; then
			echo_color 2 [X] "$dmn"
		else
			echo_color 0 [ ] "$dmn"
		fi
	done;;
-h|--help)
	echo "rc-car 1.0"
	echo "Usage: [--help] [--version] <action> [list of daemons]"
	echo
	echo "Actions:"
	echo "rc list		   shows status of all daemons (default action)"
	echo "rc start [daemons]   starts daemons"
	echo "rc stop [daemons]	   stops daemons"
	echo "rc restart [daemons] restarts daemons"
	echo
	echo "System Actions:"
	echo "rc reboot		   reboots the system"
	echo "rc shutdown   	   shutdown the system"
	
esac
